name: CI Pipeline

on:
  push:
    branches:
      - main
      - Preso 
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install JavaScript dependencies
        run: |
          npm install --save-dev prettier
      - name: Run Python Linter
        run: |
          flake8 .
      - name: Run JavaScript Linter and fix issues
        run: |
          npx prettier --write .

  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: Install SonarScanner CLI
      - name: Install SonarScanner
        run: |
          curl -sSLo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner-cli.zip
          mv sonar-scanner-5.0.1.3006-linux sonar-scanner
          echo "$(pwd)/sonar-scanner/bin" >> $GITHUB_PATH

      # Step 3: Run SonarScanner
      - name: SonarCloud Scan
        run: |
          sonar-scanner \
            -Dsonar.organization="presandreichev" \
            -Dsonar.projectKey="presandreichev" \
            -Dsonar.sources="." \
            -Dsonar.host.url="https://sonarcloud.io" \
            -Dsonar.login="${{ secrets.SONAR_TOKEN }}"
            -X
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            
  snyk:
    name: Snyk Security Scan
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3  # Use the latest stable version of the checkout action
  
      - name: Set up Snyk
        uses: snyk/actions/setup@master  # Set up Snyk with the correct action
        with:
          token: ${{ secrets.SNYK_TOKEN }}  # Use the secret for Snyk authentication
  
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./app/requirements.txt  # Install project dependencies
      - name: Authenticate with Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}
      - name: Snyk Scan
        run: snyk test ./app  # Replace ./app with the correct folder if necessary


  build:
    name: Build Project
    runs-on: ubuntu-24.04
    needs: [lint, sonarcloud, snyk]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Build
        run: |
          docker build -t ghcr.io/tarator47/sudoku-app:latest ./app

  trivy:
    name: Trivy Security Scan
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Trivy Scan
        run: |
          docker run --rm -v ./app:/app aquasec/trivy fs /app

  tests:
    name: Run Tests
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Run Tests
        run: |
          # Replace with actual test command
          echo "Running tests..."

  deploy:
    name: Deploy Application
    runs-on: ubuntu-24.04
    needs: [tests, trivy]
    steps:
      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push Docker Image
        run: |
          docker push ghcr.io/tarator47/sudoku-app:latest
