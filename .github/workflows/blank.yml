name: CI Pipeline

on:
  push:
    branches:
      - main
      - Preso
  pull_request:
    branches:
      - main
      - Preso

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install JavaScript dependencies
        run: |
          npm install --save-dev prettier
      - name: Run Python Linter
        run: |
          flake8 .
      - name: Run JavaScript Linter and fix issues
        run: |
          npx prettier --write .
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: SonarCloud Scan
        run: |
          sonar-scanner \
            -Dsonar.organization="your-organization" \
            -Dsonar.projectKey="your-project-key" \
            -Dsonar.sources="." \
            -Dsonar.host.url="https://sonarcloud.io" \
            -Dsonar.login="${{ secrets.SONAR_TOKEN }}"
  snyk:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@master
        - uses: snyk/actions/setup@master
        - uses: actions/setup-go@v1
          with:
            go-version: '1.13'
        - name: Snyk monitor
          run: snyk test
          env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}


  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: [lint, sonarcloud, snyk]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Build
        run: |
          # Replace with actual build command
          echo "Building project..."

  trivy:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Trivy Scan
        run: |
          docker run --rm -v $(pwd):/project aquasec/trivy fs /project

  tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Run Tests
        run: |
          # Replace with actual test command
          echo "Running tests..."

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: [tests, trivy]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Deploy
        run: |
          # Replace with actual deploy command
          echo "Deploying application..."
