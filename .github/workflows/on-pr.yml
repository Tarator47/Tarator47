name: CI Pipeline
on:
  push:
    branches:
      - Preso-2
jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install JavaScript dependencies
        run: |
          npm install --save-dev prettier
      - name: Run Python Linter
        run: |
          flake8 .
      - name: Run JavaScript Linter and fix issues
        run: |
          npx prettier --write .
  snyk:
    name: Snyk Security Scan
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Snyk
        uses: snyk/actions/setup@master
        with:
          token: ${{ secrets.SNYK_TOKEN }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./app/requirements.txt
      - name: Authenticate with Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}
      - name: Snyk Scan
        run: snyk test ./app
  trivy:
    name: Trivy Security Scan
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Trivy Scan
        run: |
          docker run --rm -v ./app:/app aquasec/trivy fs /app

  test:
    name: Run Python Unit Tests
    needs: [lint, snyk, trivy]
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt
      - name: Run tests
        run: python -m unittest discover ./app
  
  dast:
    name: OWASP_ZAP DAST Scanning
    needs: test
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Verify Application Directory
        run: ls -la 

      - name: Build and Run the Application
        run: |
          if [ ! -d "./app" ]; then echo "Error: ./app directory not found!"; exit 1; fi
          docker build -t sudoku-app:latest ./app
          docker run -d -p 7650:7650 --name sudoku-container sudoku-app:latest
          sleep 20
          docker ps

      - name: OWASP ZAP Scan
        run: |
          docker run --rm -v $(pwd):/zap/wrk \
          owasp/zap2docker zap-baseline.py \
          -t http://localhost:7650 \
          -r /zap/wrk/zap_report.html || true

      - name: Check ZAP Logs
        run: cat /zap/wrk/zap_report.html || echo "No report found!"

      - name: Upload DAST Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-dast-report
          path: /zap/wrk/zap_report.html
